<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.codenova.moneylog.repository.ExpenseRepository">
    <insert id="save">
        insert into
        expense(user_id, expense_date, description, amount, category_id)
        values
        (#{userId},#{expenseDate},#{description},#{amount},#{categoryId})
    </insert>

    <select id="findByUserId" resultType="expense">
        select * from expense
        where user_id=#{userId}
        order by expense_date asc, id asc
    </select>

    <select id="findByUserIdAndDuration" resultType="expenseWithCategory">
        select expense.*, categorys.name as category_name from expense
        join categorys on expense.category_id = categorys.id
        where user_id=#{userId} and expense_date between #{startDate} and #{endDate}
        order by expense_date asc, id asc
    </select>

    <select id="findWithCategoryByUserId" resultType="ExpenseWithCategory">
        select e.id,
               e.user_id,
               e.expense_date,
               e.description,
               e.amount,
               c.name as category_name
        from expense e
        join categorys c on e.category_id = c.id
        where e.user_id =#{userId}
        order by expense_date asc, id asc
    </select>
    <select id="findSumAmountByUserId" resultType="int">
        select ifnull(sum(amount),0) from expense
        where user_id=#{userId}
        and expense_date between #{startDate} and #{endDate}
    </select>
    <select id="findWeeklyExpenseByUserId" resultType="ExpenseWithCategory">
        select * from expense
        where user_id=#{userId}
        and expense_date between #{startDate} and #{endDate}
        order by amount desc limit 3
    </select>
    <select id="getCategoryByUserIdDuration" resultType="ExpenseSumCategory">
        select t.*, categorys.name as category_name from (select category_id, sum(amount) as total from expense
        where user_id=#{userId} and expense_date between #{startDate} and #{endDate}
        group by category_id ) as t join categorys on t.category_id = categorys.id
        order by total desc;
    </select>
    <select id ="getCategoryExpenseByUserIdOrderByCategoryId" resultType="ExpenseSumCategory">
        select ifnull(total,0) as total,categorys.id as category_id, categorys.name as category_name from (
        select category_id,sum(amount) as total from expense
        where user_id=#{userId} and expense_date between #{startDate} and #{endDate}
        group by category_id
        ) as t right join categorys on t.category_id = categorys.id
        order by category_id asc;
    </select>

    <select id="getDailyExpenseByUserIdAndPeriod" resultType="DailyExpense">
        select expense_date, sum(amount) as total from expense
        where user_id=#{userId} and expense_date between #{startDate} and #{endDate}
        group by expense_date
        order by expense_date asc
    </select>
</mapper>